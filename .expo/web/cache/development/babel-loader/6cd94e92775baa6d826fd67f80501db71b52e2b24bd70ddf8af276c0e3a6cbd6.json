{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { Ionicons } from '@expo/vector-icons';\nimport * as Font from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport * as React from 'react';\nexport default function useCachedResources() {\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    isLoadingComplete = _React$useState2[0],\n    setLoadingComplete = _React$useState2[1];\n  React.useEffect(function () {\n    function loadResourcesAndDataAsync() {\n      return _loadResourcesAndDataAsync.apply(this, arguments);\n    }\n    function _loadResourcesAndDataAsync() {\n      _loadResourcesAndDataAsync = _asyncToGenerator(function* () {\n        try {\n          SplashScreen.preventAutoHideAsync();\n          yield Font.loadAsync(_objectSpread(_objectSpread({}, Ionicons.font), {}, {\n            'space-mono': require(\"../assets/fonts/SpaceMono-Regular.ttf\")\n          }));\n        } catch (e) {\n          console.warn(e);\n        } finally {\n          setLoadingComplete(true);\n          SplashScreen.hideAsync();\n        }\n      });\n      return _loadResourcesAndDataAsync.apply(this, arguments);\n    }\n    loadResourcesAndDataAsync();\n  }, []);\n  return isLoadingComplete;\n}","map":{"version":3,"names":["Ionicons","Font","SplashScreen","React","useCachedResources","_React$useState","useState","_React$useState2","_slicedToArray","isLoadingComplete","setLoadingComplete","useEffect","loadResourcesAndDataAsync","_loadResourcesAndDataAsync","apply","arguments","_asyncToGenerator","preventAutoHideAsync","loadAsync","_objectSpread","font","require","e","console","warn","hideAsync"],"sources":["/Users/chengchuan/Coding/Projects/LifeHack-2023/hooks/useCachedResources.ts"],"sourcesContent":["import { Ionicons } from '@expo/vector-icons';\nimport * as Font from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport * as React from 'react';\n\nexport default function useCachedResources() {\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\n\n  // Load any resources or data that we need prior to rendering the app\n  React.useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      try {\n        SplashScreen.preventAutoHideAsync();\n\n        // Load fonts\n        await Font.loadAsync({\n          ...Ionicons.font,\n          'space-mono': require('../assets/fonts/SpaceMono-Regular.ttf'),\n        });\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        console.warn(e);\n      } finally {\n        setLoadingComplete(true);\n        SplashScreen.hideAsync();\n      }\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n\n  return isLoadingComplete;\n}\n"],"mappings":";;;;;AAAA,SAASA,QAAQ,QAAQ,oBAAoB;AAC7C,OAAO,KAAKC,IAAI,MAAM,WAAW;AACjC,OAAO,KAAKC,YAAY,MAAM,oBAAoB;AAClD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAE9B,eAAe,SAASC,kBAAkBA,CAAA,EAAG;EAC3C,IAAAC,eAAA,GAAgDF,KAAK,CAACG,QAAQ,CAAC,KAAK,CAAC;IAAAC,gBAAA,GAAAC,cAAA,CAAAH,eAAA;IAA9DI,iBAAiB,GAAAF,gBAAA;IAAEG,kBAAkB,GAAAH,gBAAA;EAG5CJ,KAAK,CAACQ,SAAS,CAAC,YAAM;IAAA,SACLC,yBAAyBA,CAAA;MAAA,OAAAC,0BAAA,CAAAC,KAAA,OAAAC,SAAA;IAAA;IAAA,SAAAF,2BAAA;MAAAA,0BAAA,GAAAG,iBAAA,CAAxC,aAA2C;QACzC,IAAI;UACFd,YAAY,CAACe,oBAAoB,CAAC,CAAC;UAGnC,MAAMhB,IAAI,CAACiB,SAAS,CAAAC,aAAA,CAAAA,aAAA,KACfnB,QAAQ,CAACoB,IAAI;YAChB,YAAY,EAAEC,OAAO,wCAAwC;UAAC,EAC/D,CAAC;QACJ,CAAC,CAAC,OAAOC,CAAC,EAAE;UAEVC,OAAO,CAACC,IAAI,CAACF,CAAC,CAAC;QACjB,CAAC,SAAS;UACRZ,kBAAkB,CAAC,IAAI,CAAC;UACxBR,YAAY,CAACuB,SAAS,CAAC,CAAC;QAC1B;MACF,CAAC;MAAA,OAAAZ,0BAAA,CAAAC,KAAA,OAAAC,SAAA;IAAA;IAEDH,yBAAyB,CAAC,CAAC;EAC7B,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOH,iBAAiB;AAC1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}