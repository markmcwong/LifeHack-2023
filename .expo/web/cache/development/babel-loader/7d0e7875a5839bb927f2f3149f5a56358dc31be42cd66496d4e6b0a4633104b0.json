{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { Avatar, Text, HStack, ScrollView, View, VStack, Divider, Pressable } from \"native-base\";\nimport * as React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport { useSelector } from \"react-redux\";\nimport { fetchGroupByUserID, fetchUserDetail } from \"../services/firestore\";\nimport TimeAgo from \"javascript-time-ago\";\nimport en from \"javascript-time-ago/locale/en\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar data = [{\n  name: \"John Doe\",\n  message: \"Hello, World!\",\n  time: \"1:00 PM\"\n}, {\n  name: \"John Doe\",\n  message: \"Hello, World!\",\n  time: \"1:00 PM\"\n}];\nexport var ChatListScreen = function ChatListScreen(_ref) {\n  var navigation = _ref.navigation;\n  var user = useSelector(function (state) {\n    return state.user;\n  });\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    groups = _useState2[0],\n    setGroups = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    userDetailList = _useState4[0],\n    setUserDetailList = _useState4[1];\n  TimeAgo.addDefaultLocale(en);\n  var timeAgo = new TimeAgo(\"en-US\");\n  useEffect(function () {\n    fetchGroupByUserID(user.uid, function (data) {\n      return setGroups(data);\n    });\n  }, []);\n  useEffect(function () {\n    groups && console.log(groups.length);\n    groups && fetchUserDetail(groups.map(function (group) {\n      return group.members;\n    }), function (val) {\n      return setUserDetailList(val);\n    });\n  }, [groups]);\n  return _jsxs(SafeAreaView, {\n    style: {\n      backgroundColor: \"white\",\n      overflow: \"hidden\",\n      display: \"flex\"\n    },\n    children: [_jsx(HStack, {\n      px: 5,\n      paddingTop: 2,\n      style: {\n        backgroundColor: \"#fff\",\n        shadowColor: \"#000\",\n        shadowOffset: {\n          width: 1,\n          height: 5\n        },\n        shadowOpacity: 0.1,\n        shadowRadius: 5,\n        elevation: 5\n      },\n      w: \"100%\",\n      paddingBottom: 5,\n      backgroundColor: \"white\",\n      children: _jsx(Text, {\n        color: user.isYouth ? \"#FF7200\" : \"#78C9A7\",\n        fontWeight: \"500\",\n        fontSize: 26,\n        children: \"Chats\"\n      })\n    }), _jsx(View, {\n      px: 5,\n      style: styles.container,\n      children: _jsx(ScrollView, {\n        w: \"100%\",\n        my: 8,\n        children: _jsx(VStack, {\n          w: \"100%\",\n          alignItems: \"flex-start\",\n          justifyContent: \"flex-start\",\n          children: userDetailList && userDetailList.map(function (conversation, index) {\n            return _jsxs(React.Fragment, {\n              children: [_jsx(Pressable, {\n                onPress: function onPress() {\n                  return navigation.navigate(\"Conversation\", {\n                    id: groups[index].id,\n                    name: conversation.name\n                  });\n                },\n                children: _jsxs(HStack, {\n                  w: \"100%\",\n                  paddingTop: index == 0 ? 0 : 5,\n                  paddingBottom: 5,\n                  justifyContent: \"space-between\",\n                  children: [_jsxs(HStack, {\n                    w: \"70%\",\n                    children: [_jsx(Avatar, {\n                      size: \"lg\",\n                      source: {\n                        uri: \"https://wallpaperaccess.com/full/317501.jpg\"\n                      }\n                    }), _jsxs(VStack, {\n                      px: 3,\n                      py: 2.5,\n                      w: \"80%\",\n                      justifyContent: \"space-between\",\n                      children: [_jsx(Text, {\n                        fontSize: 18,\n                        fontWeight: \"300\",\n                        children: conversation.name\n                      }), _jsx(Text, {\n                        fontSize: 12,\n                        fontWeight: \"300\",\n                        color: \"gray.400\",\n                        children: groups[index].lastText.length > 20 ? groups[index].lastText.substring(0, 30) + \"...\" : groups[index].lastText\n                      })]\n                    })]\n                  }), _jsx(Text, {\n                    py: 3,\n                    px: 3,\n                    fontSize: 14,\n                    children: timeAgo.format(groups[index].lastSent)\n                  })]\n                })\n              }), _jsx(Divider, {})]\n            }, groups[index].lastSent + index);\n          })\n        })\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    height: \"100%\",\n    display: \"flex\",\n    justifyContent: \"flex-start\",\n    alignItems: \"flex-start\"\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: \"bold\"\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: \"80%\"\n  },\n  greenText: {\n    color: \"#147460\"\n  }\n});","map":{"version":3,"names":["Avatar","Text","HStack","ScrollView","View","VStack","Divider","Pressable","React","useEffect","useState","StyleSheet","SafeAreaView","useSelector","fetchGroupByUserID","fetchUserDetail","TimeAgo","en","jsx","_jsx","jsxs","_jsxs","data","name","message","time","ChatListScreen","_ref","navigation","user","state","_useState","_useState2","_slicedToArray","groups","setGroups","_useState3","_useState4","userDetailList","setUserDetailList","addDefaultLocale","timeAgo","uid","console","log","length","map","group","members","val","style","backgroundColor","overflow","display","children","px","paddingTop","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","w","paddingBottom","color","isYouth","fontWeight","fontSize","styles","container","my","alignItems","justifyContent","conversation","index","Fragment","onPress","navigate","id","size","source","uri","py","lastText","substring","format","lastSent","create","title","separator","marginVertical","greenText"],"sources":["/Users/chengchuan/Coding/Projects/LifeHack-2023/screens/ChatListScreen.tsx"],"sourcesContent":["import {\n  Avatar,\n  Text,\n  Box,\n  HStack,\n  ScrollView,\n  View,\n  VStack,\n  Divider,\n  Pressable,\n} from \"native-base\";\nimport * as React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { StyleSheet } from \"react-native\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport { useSelector } from \"react-redux\";\nimport { fetchGroupByUserID, fetchUserDetail } from \"../services/firestore\";\nimport TimeAgo from \"javascript-time-ago\";\nimport en from \"javascript-time-ago/locale/en\";\nconst data = [\n  {\n    name: \"John Doe\",\n    message: \"Hello, World!\",\n    time: \"1:00 PM\",\n  },\n  {\n    name: \"John Doe\",\n    message: \"Hello, World!\",\n    time: \"1:00 PM\",\n  },\n];\n\nexport const ChatListScreen = ({ navigation }) => {\n  const user = useSelector((state) => state.user);\n  const [groups, setGroups] = useState<any>(null);\n  const [userDetailList, setUserDetailList] = useState<any>(null);\n  TimeAgo.addDefaultLocale(en);\n  const timeAgo = new TimeAgo(\"en-US\");\n\n  useEffect(() => {\n    // timeAgo;\n    fetchGroupByUserID(user.uid, (data: any) => setGroups(data));\n  }, []);\n\n  useEffect(() => {\n    groups && console.log(groups.length);\n    groups &&\n      fetchUserDetail(\n        groups.map((group: any) => group.members),\n        (val: any) => setUserDetailList(val)\n      );\n  }, [groups]);\n\n  return (\n    <SafeAreaView\n      style={{ backgroundColor: \"white\", overflow: \"hidden\", display: \"flex\" }}\n    >\n      <HStack\n        px={5}\n        paddingTop={2}\n        style={{\n          backgroundColor: \"#fff\",\n          shadowColor: \"#000\",\n          shadowOffset: { width: 1, height: 5 },\n          shadowOpacity: 0.1,\n          shadowRadius: 5,\n          elevation: 5,\n        }}\n        w=\"100%\"\n        paddingBottom={5}\n        backgroundColor=\"white\"\n      >\n        <Text\n          color={user.isYouth ? \"#FF7200\" : \"#78C9A7\"}\n          fontWeight=\"500\"\n          fontSize={26}\n        >\n          Chats\n        </Text>\n      </HStack>\n      <View px={5} style={styles.container}>\n        <ScrollView w=\"100%\" my={8}>\n          <VStack w=\"100%\" alignItems=\"flex-start\" justifyContent=\"flex-start\">\n            {userDetailList &&\n              userDetailList.map((conversation, index) => (\n                <React.Fragment key={groups[index].lastSent + index}>\n                  <Pressable\n                    onPress={() =>\n                      navigation.navigate(\"Conversation\", {\n                        id: groups[index].id,\n                        name: conversation.name,\n                      })\n                    }\n                  >\n                    <HStack\n                      w=\"100%\"\n                      paddingTop={index == 0 ? 0 : 5}\n                      paddingBottom={5}\n                      justifyContent=\"space-between\"\n                    >\n                      <HStack w=\"70%\">\n                        <Avatar\n                          size=\"lg\"\n                          source={{\n                            uri: \"https://wallpaperaccess.com/full/317501.jpg\",\n                          }}\n                        ></Avatar>\n                        <VStack\n                          px={3}\n                          py={2.5}\n                          w=\"80%\"\n                          justifyContent=\"space-between\"\n                        >\n                          <Text fontSize={18} fontWeight=\"300\">\n                            {conversation.name}\n                          </Text>\n                          <Text\n                            // numberOfLines={1}\n                            fontSize={12}\n                            // width=\"70%\"\n                            // ellipsizeMode=\"tail\"\n                            fontWeight=\"300\"\n                            color=\"gray.400\"\n                            // style={{ flex: 1 }}\n                          >\n                            {groups[index].lastText.length > 20\n                              ? groups[index].lastText.substring(0, 30) + \"...\"\n                              : groups[index].lastText}\n                            {/* {groups[index].id} */}\n                          </Text>\n                        </VStack>\n                      </HStack>\n                      <Text py={3} px={3} fontSize={14}>\n                        {timeAgo.format(groups[index].lastSent as Date)}\n                      </Text>\n                    </HStack>\n                  </Pressable>\n                  <Divider />\n                </React.Fragment>\n              ))}\n          </VStack>\n        </ScrollView>\n      </View>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    // flex: 1,\n    // paddingTop: 20,\n    // paddingBottom: 12,\n    height: \"100%\",\n    display: \"flex\",\n    justifyContent: \"flex-start\",\n    alignItems: \"flex-start\",\n    // justifyContent: \"center\",\n    // backgroundColor: \"#FFF\",\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: \"80%\",\n  },\n  greenText: {\n    color: \"#147460\",\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}