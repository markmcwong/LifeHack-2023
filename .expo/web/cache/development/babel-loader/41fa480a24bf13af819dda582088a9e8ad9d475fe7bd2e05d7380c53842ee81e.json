{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport \"firebase/compat/auth\";\nimport \"firebase/compat/firestore\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport { parseGroups, parseMessages } from \"./util\";\nimport { data } from \"../screens/ProfileScreen\";\nimport firebase from \"firebase/compat/app\";\nimport { firebaseConfig } from \"./firebaseConfig\";\nimport store from \"../state/store\";\nimport uuid from \"react-native-uuid\";\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n}\nvar db = firebase.firestore();\nexport var getHistory = function () {\n  var _ref = _asyncToGenerator(function* (userId) {\n    console.log(userId);\n    var records = yield db.collection(\"history\").where(\"user\", \"==\", userId.uid).get();\n    return records.docs.map(function (x) {\n      return _objectSpread(_objectSpread({}, x.data()), {}, {\n        id: x.id.substr(0, 8)\n      });\n    });\n  });\n  return function getHistory(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var createNewUserRecord = function () {\n  var _ref2 = _asyncToGenerator(function* (name, email, userId) {\n    db.collection(\"user\").doc(userId).set({\n      email: email,\n      name: name,\n      interests: []\n    });\n  });\n  return function createNewUserRecord(_x2, _x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var getRecommendedUsers = function () {\n  var _ref3 = _asyncToGenerator(function* (isYouth, callback, languages) {\n    var userList = [];\n    console.log(\"language length \" + languages.length);\n    if (languages.length == 0) {\n      var querySnapshot = yield db.collection(\"user\").where(\"isYouth\", \"==\", !isYouth).onSnapshot(function (querySnapshot) {\n        var data = [];\n        querySnapshot.forEach(function (doc) {\n          data.push(_objectSpread({\n            id: doc.id\n          }, doc.data()));\n        });\n        callback(data);\n      });\n      return querySnapshot;\n    } else {\n      var _querySnapshot = db.collection(\"user\").where(\"isYouth\", \"==\", !isYouth).where(\"languages\", \"array-contains-any\", languages).onSnapshot(function (querySnapshot) {\n        var data = [];\n        querySnapshot.forEach(function (doc) {\n          data.push(_objectSpread({\n            id: doc.id\n          }, doc.data()));\n        });\n        callback(data);\n      });\n      return _querySnapshot;\n    }\n  });\n  return function getRecommendedUsers(_x5, _x6, _x7) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var setUserBio = function () {\n  var _ref4 = _asyncToGenerator(function* (bio, userId) {\n    console.log(bio);\n    yield db.collection(\"user\").doc(userId).update({\n      bio: bio\n    });\n  });\n  return function setUserBio(_x8, _x9) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nexport var setUserMotherTongue = function () {\n  var _ref5 = _asyncToGenerator(function* (language, userId) {\n    yield db.collection(\"user\").doc(userId).update({\n      languages: firebase.firestore.FieldValue.arrayUnion(language)\n    });\n  });\n  return function setUserMotherTongue(_x10, _x11) {\n    return _ref5.apply(this, arguments);\n  };\n}();\nexport var setUserFamiliarLang = function () {\n  var _ref6 = _asyncToGenerator(function* (listOfLang, userId) {\n    listOfLang.forEach(function (lang) {\n      db.collection(\"user\").doc(userId).update({\n        languages: firebase.firestore.FieldValue.arrayUnion(lang)\n      });\n    });\n  });\n  return function setUserFamiliarLang(_x12, _x13) {\n    return _ref6.apply(this, arguments);\n  };\n}();\nexport var setUserInterests = function () {\n  var _ref7 = _asyncToGenerator(function* (listOfInterests, userId) {\n    listOfInterests.forEach(function (int) {\n      db.collection(\"user\").doc(userId).update({\n        interests: firebase.firestore.FieldValue.arrayUnion(int)\n      });\n    });\n  });\n  return function setUserInterests(_x14, _x15) {\n    return _ref7.apply(this, arguments);\n  };\n}();\nexport var setUserType = function () {\n  var _ref8 = _asyncToGenerator(function* (isYouth, userId) {\n    db.collection(\"user\").doc(userId).update({\n      isYouth: isYouth\n    });\n  });\n  return function setUserType(_x16, _x17) {\n    return _ref8.apply(this, arguments);\n  };\n}();\nexport var getUserRecord = function () {\n  var _ref9 = _asyncToGenerator(function* (userId) {\n    console.log(\"userId : \" + userId);\n    var record = yield db.collection(\"user\").doc(userId).get();\n    console.log(\"current user: \" + record.data());\n    store.dispatch({\n      type: \"READ_USER_DETAILS\",\n      name: record.data().name,\n      isYouth: record.data().isYouth\n    });\n  });\n  return function getUserRecord(_x18) {\n    return _ref9.apply(this, arguments);\n  };\n}();\nexport var addDepositRecord = function () {\n  var _ref10 = _asyncToGenerator(function* (userId, dropoffPoint, recycledObject, beforeImage, afterImage, currentPoints) {\n    var _data$filter$0$points;\n    var points = (_data$filter$0$points = data.filter(function (x) {\n      return x.name == recycledObject;\n    })[0].points) != null ? _data$filter$0$points : 0;\n    db.collection(\"history\").add({\n      _createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      user: userId,\n      location: dropoffPoint,\n      recycledObject: recycledObject,\n      beforeImage: beforeImage,\n      afterImage: afterImage,\n      points: points\n    });\n    db.collection(\"user\").doc(userId).update({\n      reward: currentPoints + points\n    });\n    getUserRecord(userId);\n  });\n  return function addDepositRecord(_x19, _x20, _x21, _x22, _x23, _x24) {\n    return _ref10.apply(this, arguments);\n  };\n}();\nexport var uploadImageAsync = function () {\n  var _ref11 = _asyncToGenerator(function* (uri) {\n    var blob = yield new Promise(function (resolve, reject) {\n      var xhr = new XMLHttpRequest();\n      xhr.onload = function () {\n        resolve(xhr.response);\n      };\n      xhr.onerror = function (e) {\n        console.log(e);\n        reject(new TypeError(\"Network request failed\"));\n      };\n      xhr.responseType = \"blob\";\n      xhr.open(\"GET\", uri, true);\n      xhr.send(null);\n    });\n    var ref = firebase.storage().ref().child(uuid.v4().toString());\n    var snapshot = yield ref.put(blob);\n    blob.close();\n    return yield snapshot.ref.getDownloadURL();\n  });\n  return function uploadImageAsync(_x25) {\n    return _ref11.apply(this, arguments);\n  };\n}();\nexport var pickImage = function () {\n  var _ref12 = _asyncToGenerator(function* (callbackUploading, callbackImage) {\n    var pickerResult = yield ImagePicker.launchImageLibraryAsync({\n      allowsEditing: true,\n      aspect: [4, 3]\n    });\n    handleImagePicked(pickerResult, callbackUploading, callbackImage);\n  });\n  return function pickImage(_x26, _x27) {\n    return _ref12.apply(this, arguments);\n  };\n}();\nvar handleImagePicked = function () {\n  var _ref13 = _asyncToGenerator(function* (pickerResult, callbackUploading, callbackImage) {\n    try {\n      callbackUploading(true);\n      if (!pickerResult.cancelled) {\n        var uploadUrl = yield uploadImageAsync(pickerResult.uri);\n        callbackImage(uploadUrl);\n      }\n    } catch (e) {\n      console.log(e);\n      alert(\"Upload failed, sorry :(\");\n    } finally {\n      callbackUploading(false);\n    }\n  });\n  return function handleImagePicked(_x28, _x29, _x30) {\n    return _ref13.apply(this, arguments);\n  };\n}();\nexport var fetchGroupByUserID = function fetchGroupByUserID(uid, callback) {\n  console.log(\"start this\" + uid);\n  var groupRef = db.collection(\"message\");\n  groupRef.where(\"members\", \"array-contains\", db.collection(\"user\").doc(uid)).onSnapshot(function (querySnapshot) {\n    console.log(\"hiii\" + querySnapshot.size);\n    var groups = [];\n    querySnapshot.forEach(function (doc) {\n      var id = doc.id;\n      console.log(\"hi\");\n      if (doc) groups.push(_objectSpread({\n        id: id\n      }, doc.data()));\n    });\n    console.log(groups);\n    callback(parseGroups(uid, groups));\n  });\n};\nexport var getUserDetails = function () {\n  var _ref14 = _asyncToGenerator(function* (userId, callback) {\n    var ref = yield db.collection(\"user\").doc(userId).get();\n    var data = ref.data();\n    console.log(data);\n    callback(data);\n  });\n  return function getUserDetails(_x31, _x32) {\n    return _ref14.apply(this, arguments);\n  };\n}();\nexport var fetchMessagesByGroupId = function () {\n  var _ref15 = _asyncToGenerator(function* (groupId, callback) {\n    var messageRef = db.collection(\"message\");\n    messageRef.doc(groupId).collection(\"messages\").orderBy(\"createdAt\", \"desc\").onSnapshot(function (querySnapshot) {\n      var messages = [];\n      querySnapshot.forEach(function (doc) {\n        var id = doc.id;\n        if (doc) messages.push(_objectSpread({\n          id: id\n        }, doc.data()));\n      });\n      callback(parseMessages(messages));\n    });\n  });\n  return function fetchMessagesByGroupId(_x33, _x34) {\n    return _ref15.apply(this, arguments);\n  };\n}();\nexport var fetchUsers = function () {\n  var _ref16 = _asyncToGenerator(function* (languages) {\n    var messages;\n    var userRef = db.collection(\"user\");\n    var snapshot = yield userRef.where(\"languages\", \"array-contains-any\", languages).get();\n    snapshot.docs.forEach(function (x) {\n      return console.log(x.data());\n    });\n  });\n  return function fetchUsers(_x35) {\n    return _ref16.apply(this, arguments);\n  };\n}();\nexport var sendNewMessage = function () {\n  var _ref17 = _asyncToGenerator(function* (id, message, userId) {\n    var messageRef = db.collection(\"message\");\n    var newMessage = yield messageRef.doc(id).collection(\"messages\").add({\n      text: message,\n      sentBy: userId,\n      createdAt: firebase.firestore.Timestamp.now()\n    });\n    messageRef.doc(id).update({\n      lastText: message,\n      lastSent: firebase.firestore.Timestamp.now()\n    });\n  });\n  return function sendNewMessage(_x36, _x37, _x38) {\n    return _ref17.apply(this, arguments);\n  };\n}();\nexport var fetchUserDetail = function () {\n  var _ref18 = _asyncToGenerator(function* (ids, callback) {\n    var promises = [];\n    var users = [];\n    ids.forEach(function () {\n      var _ref19 = _asyncToGenerator(function* (id) {\n        promises.push(id.get().then(function (doc) {\n          var data = doc.data();\n          users.push({\n            email: data.email,\n            name: data.name\n          });\n        }));\n      });\n      return function (_x41) {\n        return _ref19.apply(this, arguments);\n      };\n    }());\n    yield Promise.all(promises);\n    callback(users);\n  });\n  return function fetchUserDetail(_x39, _x40) {\n    return _ref18.apply(this, arguments);\n  };\n}();\nexport var connectTwoUsers = function () {\n  var _ref20 = _asyncToGenerator(function* (ids) {\n    var messageRef = db.collection(\"message\");\n    var arefs = [];\n    var brefs = [];\n    var promises = [];\n    promises.push(db.collection(\"message\").where(\"members\", \"array-contains\", db.collection(\"user\").doc(ids[0])).get().then(function (docs) {\n      arefs = docs.docs.map(function (x) {\n        return x.id;\n      });\n    }));\n    promises.push(db.collection(\"message\").where(\"members\", \"array-contains\", db.collection(\"user\").doc(ids[1])).get().then(function (docs) {\n      brefs = docs.docs.map(function (x) {\n        return x.id;\n      });\n    }));\n    yield Promise.all(promises);\n    var intersected = arefs.filter(function (element) {\n      return brefs.includes(element);\n    });\n    console.log(intersected);\n    if (intersected.length == 0 || intersected == null || brefs == null || arefs == null) {\n      console.log(\"yes\");\n      var newMessage = yield messageRef.add({\n        lastText: \"Start your new conversation now!\",\n        lastSent: firebase.firestore.FieldValue.serverTimestamp(),\n        members: ids.map(function (x) {\n          return db.collection(\"user\").doc(x);\n        })\n      });\n      return newMessage.id;\n    } else {\n      console.log(\"no!\");\n      return intersected[0];\n    }\n  });\n  return function connectTwoUsers(_x42) {\n    return _ref20.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["ImagePicker","parseGroups","parseMessages","data","firebase","firebaseConfig","store","uuid","apps","length","initializeApp","db","firestore","getHistory","_ref","_asyncToGenerator","userId","console","log","records","collection","where","uid","get","docs","map","x","_objectSpread","id","substr","_x","apply","arguments","createNewUserRecord","_ref2","name","email","doc","set","interests","_x2","_x3","_x4","getRecommendedUsers","_ref3","isYouth","callback","languages","userList","querySnapshot","onSnapshot","forEach","push","_x5","_x6","_x7","setUserBio","_ref4","bio","update","_x8","_x9","setUserMotherTongue","_ref5","language","FieldValue","arrayUnion","_x10","_x11","setUserFamiliarLang","_ref6","listOfLang","lang","_x12","_x13","setUserInterests","_ref7","listOfInterests","int","_x14","_x15","setUserType","_ref8","_x16","_x17","getUserRecord","_ref9","record","dispatch","type","_x18","addDepositRecord","_ref10","dropoffPoint","recycledObject","beforeImage","afterImage","currentPoints","_data$filter$0$points","points","filter","add","_createdAt","serverTimestamp","user","location","reward","_x19","_x20","_x21","_x22","_x23","_x24","uploadImageAsync","_ref11","uri","blob","Promise","resolve","reject","xhr","XMLHttpRequest","onload","response","onerror","e","TypeError","responseType","open","send","ref","storage","child","v4","toString","snapshot","put","close","getDownloadURL","_x25","pickImage","_ref12","callbackUploading","callbackImage","pickerResult","launchImageLibraryAsync","allowsEditing","aspect","handleImagePicked","_x26","_x27","_ref13","cancelled","uploadUrl","alert","_x28","_x29","_x30","fetchGroupByUserID","groupRef","size","groups","getUserDetails","_ref14","_x31","_x32","fetchMessagesByGroupId","_ref15","groupId","messageRef","orderBy","messages","_x33","_x34","fetchUsers","_ref16","userRef","_x35","sendNewMessage","_ref17","message","newMessage","text","sentBy","createdAt","Timestamp","now","lastText","lastSent","_x36","_x37","_x38","fetchUserDetail","_ref18","ids","promises","users","_ref19","then","_x41","all","_x39","_x40","connectTwoUsers","_ref20","arefs","brefs","intersected","element","includes","members","_x42"],"sources":["/Users/chengchuan/Coding/Projects/LifeHack-2023/services/firestore.ts"],"sourcesContent":["import \"firebase/compat/auth\";\nimport \"firebase/compat/firestore\";\n\nimport * as ImagePicker from \"expo-image-picker\";\nimport * as firestoreTypes from \"@firebase/firestore-types\";\n\nimport { parseGroups, parseMessages } from \"./util\";\n\nimport { data } from \"../screens/ProfileScreen\";\nimport firebase from \"firebase/compat/app\";\nimport { firebaseConfig } from \"./firebaseConfig\";\nimport store from \"../state/store\";\nimport uuid from \"react-native-uuid\";\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n}\nconst db = firebase.firestore();\n\nexport const getHistory = async (userId: any) => {\n  console.log(userId);\n  const records = await db\n    .collection(\"history\")\n    .where(\"user\", \"==\", userId.uid)\n    .get();\n\n  return records.docs.map((x) => {\n    return { ...x.data(), id: x.id.substr(0, 8) };\n  });\n};\n\nexport const createNewUserRecord = async (\n  name: string,\n  email: string,\n  userId: string\n) => {\n  db.collection(\"user\").doc(userId).set({\n    email: email,\n    name: name,\n    interests: [],\n  });\n};\n\nexport const getRecommendedUsers = async (\n  isYouth: boolean,\n  callback: Function,\n  languages: string[]\n) => {\n  const userList = [];\n  console.log(\"language length \" + languages.length);\n  if (languages.length == 0) {\n    const querySnapshot = await db\n      .collection(\"user\")\n      .where(\"isYouth\", \"==\", !isYouth)\n      .onSnapshot((querySnapshot: any) => {\n        const data: any = [];\n        // console.log(\"length: \" + querySnapshot.length);\n        querySnapshot.forEach((doc) => {\n          data.push({ id: doc.id, ...doc.data() });\n        });\n        callback(data);\n      });\n    return querySnapshot;\n  } else {\n    const querySnapshot = db\n      .collection(\"user\")\n      .where(\"isYouth\", \"==\", !isYouth)\n      .where(\"languages\", \"array-contains-any\", languages)\n      .onSnapshot((querySnapshot: any) => {\n        const data: any = [];\n        querySnapshot.forEach((doc) => {\n          data.push({ id: doc.id, ...doc.data() });\n        });\n        callback(data);\n      });\n    return querySnapshot;\n  }\n};\n\nexport const setUserBio = async (bio: string, userId: string) => {\n  console.log(bio);\n  await db.collection(\"user\").doc(userId).update({\n    bio: bio,\n  });\n};\n\nexport const setUserMotherTongue = async (language: string, userId: string) => {\n  await db\n    .collection(\"user\")\n    .doc(userId)\n    .update({\n      languages: firebase.firestore.FieldValue.arrayUnion(language),\n    });\n};\n\nexport const setUserFamiliarLang = async (\n  listOfLang: String[],\n  userId: string\n) => {\n  listOfLang.forEach((lang) => {\n    db.collection(\"user\")\n      .doc(userId)\n      .update({\n        languages: firebase.firestore.FieldValue.arrayUnion(lang),\n      });\n  });\n};\n\nexport const setUserInterests = async (\n  listOfInterests: String[],\n  userId: string\n) => {\n  listOfInterests.forEach((int) => {\n    db.collection(\"user\")\n      .doc(userId)\n      .update({\n        interests: firebase.firestore.FieldValue.arrayUnion(int),\n      });\n  });\n};\n\nexport const setUserType = async (isYouth: boolean, userId: string) => {\n  db.collection(\"user\").doc(userId).update({\n    isYouth: isYouth,\n  });\n};\n\nexport const getUserRecord = async (userId: string) => {\n  console.log(\"userId : \" + userId);\n  const record = await db.collection(\"user\").doc(userId).get();\n  console.log(\"current user: \" + record.data()!);\n  store.dispatch({\n    type: \"READ_USER_DETAILS\",\n    name: record.data()!.name,\n    isYouth: record.data()!.isYouth,\n  });\n};\n\nexport const addDepositRecord = async (\n  userId: any,\n  dropoffPoint: any,\n  recycledObject: any,\n  beforeImage: any,\n  afterImage: any,\n  currentPoints: number\n) => {\n  const points = data.filter((x) => x.name == recycledObject)[0].points ?? 0;\n  db.collection(\"history\").add({\n    _createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n    user: userId,\n    location: dropoffPoint,\n    recycledObject: recycledObject,\n    beforeImage: beforeImage,\n    afterImage: afterImage,\n    points: points,\n  });\n  db.collection(\"user\")\n    .doc(userId)\n    .update({ reward: currentPoints + points });\n  getUserRecord(userId);\n};\n\nexport const uploadImageAsync = async (uri: string) => {\n  // Why are we using XMLHttpRequest? See:\n  // https://github.com/expo/expo/issues/2402#issuecomment-443726662\n  const blob: any = await new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest();\n    xhr.onload = function () {\n      resolve(xhr.response);\n    };\n    xhr.onerror = function (e) {\n      console.log(e);\n      reject(new TypeError(\"Network request failed\"));\n    };\n    xhr.responseType = \"blob\";\n    xhr.open(\"GET\", uri, true);\n    xhr.send(null);\n  });\n\n  const ref = firebase.storage().ref().child(uuid.v4().toString());\n  const snapshot = await ref.put(blob);\n\n  // We're done with the blob, close and release it\n  blob.close();\n\n  return await snapshot.ref.getDownloadURL();\n};\n\nexport const pickImage = async (\n  callbackUploading: Function,\n  callbackImage: Function\n) => {\n  let pickerResult = await ImagePicker.launchImageLibraryAsync({\n    allowsEditing: true,\n    aspect: [4, 3],\n  });\n\n  //   console.log({ pickerResult });\n  handleImagePicked(pickerResult, callbackUploading, callbackImage);\n};\n\nconst handleImagePicked = async (\n  pickerResult: ImagePicker.ImagePickerResult,\n  callbackUploading: Function,\n  callbackImage: Function\n) => {\n  try {\n    callbackUploading(true);\n\n    if (!pickerResult.cancelled) {\n      const uploadUrl = await uploadImageAsync(pickerResult.uri);\n      callbackImage(uploadUrl);\n    }\n  } catch (e) {\n    console.log(e);\n    alert(\"Upload failed, sorry :(\");\n  } finally {\n    callbackUploading(false);\n  }\n};\n\nexport const fetchGroupByUserID = (uid: string, callback: Function) => {\n  console.log(\"start this\" + uid);\n  const groupRef = db.collection(\"message\");\n  groupRef\n    .where(\"members\", \"array-contains\", db.collection(\"user\").doc(uid))\n    .onSnapshot((querySnapshot: firestoreTypes.QuerySnapshot) => {\n      console.log(\"hiii\" + querySnapshot.size);\n      let groups: any = [];\n      querySnapshot.forEach((doc: any) => {\n        const id = doc.id;\n        console.log(\"hi\");\n        if (doc) groups.push({ id, ...doc.data() });\n      });\n      console.log(groups);\n      callback(parseGroups(uid, groups));\n    });\n};\n\nexport const getUserDetails = async (userId: string, callback: Function) => {\n  const ref = await db.collection(\"user\").doc(userId).get();\n  // console.log(data.data());\n  const data = ref.data();\n  console.log(data);\n  callback(data);\n};\n\nexport const fetchMessagesByGroupId = async (\n  groupId: string,\n  callback: Function\n) => {\n  const messageRef = db.collection(\"message\");\n  messageRef\n    .doc(groupId)\n    .collection(\"messages\")\n    .orderBy(\"createdAt\", \"desc\")\n    .onSnapshot((querySnapshot) => {\n      let messages: any = [];\n      querySnapshot.forEach((doc: any) => {\n        const id = doc.id;\n        // console.log(doc.data());\n        if (doc) messages.push({ id, ...doc.data() });\n      });\n      callback(parseMessages(messages));\n    });\n};\n\nexport const fetchUsers = async (languages: string[]) => {\n  let messages;\n  // console.log(\"start\");\n  const userRef = db.collection(\"user\");\n  const snapshot: firestoreTypes.QuerySnapshot = await userRef\n    .where(\"languages\", \"array-contains-any\", languages)\n    .get();\n  snapshot.docs.forEach((x) => console.log(x.data()));\n};\n\nexport const sendNewMessage = async (\n  id: string,\n  message: string,\n  userId: string\n) => {\n  const messageRef = db.collection(\"message\");\n  // console.log(message);\n  const newMessage = await messageRef.doc(id).collection(\"messages\").add({\n    text: message,\n    sentBy: userId,\n    createdAt: firebase.firestore.Timestamp.now(),\n  });\n  messageRef.doc(id).update({\n    lastText: message,\n    lastSent: firebase.firestore.Timestamp.now(),\n  });\n  // console.log(newMessage);\n};\n\nexport const fetchUserDetail = async (ids: any[], callback: Function) => {\n  let promises: Promise<any>[] = [];\n  let users: any = [];\n  ids.forEach(async (id: any) => {\n    promises.push(\n      id.get().then((doc) => {\n        const data: any = doc.data();\n        // console.log(data);\n        users.push({ email: data.email, name: data.name });\n      })\n    );\n  });\n  await Promise.all(promises);\n  // console.log(users);\n  callback(users);\n  // return users;\n};\n\nexport const connectTwoUsers = async (ids: string[]) => {\n  const messageRef = db.collection(\"message\");\n  let arefs: string[] = [];\n  let brefs: string[] = [];\n  let promises: Promise<any>[] = [];\n  promises.push(\n    db\n      .collection(\"message\")\n      .where(\"members\", \"array-contains\", db.collection(\"user\").doc(ids[0]))\n      .get()\n      .then((docs) => {\n        arefs = docs.docs.map((x) => x.id);\n      })\n  );\n  promises.push(\n    db\n      .collection(\"message\")\n      .where(\"members\", \"array-contains\", db.collection(\"user\").doc(ids[1]))\n      .get()\n      .then((docs) => {\n        brefs = docs.docs.map((x) => x.id);\n      })\n  );\n  await Promise.all(promises);\n  const intersected = arefs.filter((element) => brefs.includes(element));\n  console.log(intersected);\n  if (\n    intersected.length == 0 ||\n    intersected == null ||\n    brefs == null ||\n    arefs == null\n  ) {\n    console.log(\"yes\"!);\n    const newMessage = await messageRef.add({\n      lastText: \"Start your new conversation now!\",\n      lastSent: firebase.firestore.FieldValue.serverTimestamp(),\n      members: ids.map((x) => db.collection(\"user\").doc(x)),\n    });\n    return newMessage.id;\n  } else {\n    console.log(\"no!\");\n    return intersected[0];\n  }\n};\n// export const fetchConversation = async () => {\n//   let messages;\n//   console.log(\"start\");\n//   const userRef = db.collection(\"user\");\n//   const snapshot: firestoreTypes.QuerySnapshot = await userRef\n//     .where(\"languages\", \"array-contains-any\", languages)\n//     .get();\n//   snapshot.docs.forEach((x) => console.log(x.data()));\n// };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}