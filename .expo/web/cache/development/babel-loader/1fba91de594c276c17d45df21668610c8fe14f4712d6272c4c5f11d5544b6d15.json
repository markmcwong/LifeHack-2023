{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { View, Text, HStack, Button } from \"native-base\";\nimport * as React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { SwipeablePanel } from \"rn-swipeable-panel\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar options = [\"Cantonese\", \"Mandarin\", \"Spanish\", \"English\", \"Korean\", \"Arabic\"];\nvar SlideUpDrawer = function SlideUpDrawer(_ref) {\n  var isPanelActive = _ref.isPanelActive,\n    callback = _ref.callback,\n    setSelectedLanguages = _ref.setSelectedLanguages;\n  var _useState = useState({\n      fullWidth: true,\n      noBackgroundOpacity: false,\n      showCloseButton: true,\n      onClose: function onClose() {\n        return callback(false);\n      },\n      onPressCloseButton: function onPressCloseButton() {\n        callback(false);\n      }\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    panelProps = _useState2[0],\n    setPanelProps = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    active = _useState4[0],\n    setActive = _useState4[1];\n  useEffect(function () {\n    setSelectedLanguages(active);\n  }, [active]);\n  return _jsx(SwipeablePanel, _objectSpread(_objectSpread({}, panelProps), {}, {\n    isActive: isPanelActive,\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"Languages\"\n      }), _jsx(HStack, {\n        flexWrap: \"wrap\",\n        children: options.map(function (option, index) {\n          return _jsx(Button, {\n            marginRight: 3,\n            marginBottom: 3,\n            borderRadius: 20,\n            backgroundColor: active.indexOf(option) != -1 ? \"#F5A623\" : \"#fff\",\n            borderColor: active.indexOf(option) != -1 ? \"#F5A623\" : \"#172D55\",\n            borderWidth: 1,\n            _text: {\n              color: active.indexOf(option) != -1 ? \"#FFF\" : \"#000\"\n            },\n            onPress: function onPress() {\n              active.indexOf(option) != -1 ? setActive(active.filter(function (x) {\n                return x != option;\n              })) : setActive([].concat(_toConsumableArray(active), [option]));\n              console.log(active);\n            },\n            children: option\n          }, index);\n        })\n      })]\n    })\n  }));\n};\nexport default SlideUpDrawer;\nvar styles = StyleSheet.create({\n  container: {\n    padding: 20,\n    flex: 1,\n    alignItems: \"flex-start\",\n    justifyContent: \"center\",\n    backgroundColor: \"#FFF\"\n  },\n  title: {\n    fontSize: 24,\n    marginBottom: 10\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: \"80%\"\n  },\n  greenText: {\n    color: \"#147460\"\n  }\n});","map":{"version":3,"names":["View","Text","HStack","Button","React","useEffect","useState","SwipeablePanel","StyleSheet","jsx","_jsx","jsxs","_jsxs","options","SlideUpDrawer","_ref","isPanelActive","callback","setSelectedLanguages","_useState","fullWidth","noBackgroundOpacity","showCloseButton","onClose","onPressCloseButton","_useState2","_slicedToArray","panelProps","setPanelProps","_useState3","_useState4","active","setActive","_objectSpread","isActive","children","style","styles","container","title","flexWrap","map","option","index","marginRight","marginBottom","borderRadius","backgroundColor","indexOf","borderColor","borderWidth","_text","color","onPress","filter","x","concat","_toConsumableArray","console","log","create","padding","flex","alignItems","justifyContent","fontSize","separator","marginVertical","height","width","greenText"],"sources":["/Users/chengchuan/Coding/Projects/LifeHack-2023/widgets/slideUpDrawer.tsx"],"sourcesContent":["import { Drawer, View, Text, HStack, Badge, Button } from \"native-base\";\nimport * as React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { SwipeablePanel } from \"rn-swipeable-panel\";\nimport { StyleSheet } from \"react-native\";\n\nconst options = [\n  \"Cantonese\",\n  \"Mandarin\",\n  \"Spanish\",\n  \"English\",\n  \"Korean\",\n  \"Arabic\",\n];\n\nconst SlideUpDrawer = ({ isPanelActive, callback, setSelectedLanguages }) => {\n  const [panelProps, setPanelProps] = useState({\n    fullWidth: true,\n    noBackgroundOpacity: false,\n    // openLarge: true,\n    showCloseButton: true,\n    onClose: () => callback(false),\n    onPressCloseButton: () => {\n      callback(false);\n    },\n  });\n\n  const [active, setActive] = useState<String[]>([]);\n  useEffect(() => {\n    setSelectedLanguages(active);\n  }, [active]);\n  return (\n    <SwipeablePanel {...panelProps} isActive={isPanelActive}>\n      <View style={styles.container}>\n        <Text style={styles.title}>Languages</Text>\n        <HStack flexWrap=\"wrap\">\n          {options.map((option, index) => (\n            <Button\n              key={index}\n              marginRight={3}\n              marginBottom={3}\n              borderRadius={20}\n              backgroundColor={\n                active.indexOf(option) != -1 ? \"#F5A623\" : \"#fff\"\n              }\n              borderColor={active.indexOf(option) != -1 ? \"#F5A623\" : \"#172D55\"}\n              borderWidth={1}\n              _text={{\n                // fontSize: 14,\n                color: active.indexOf(option) != -1 ? \"#FFF\" : \"#000\",\n              }}\n              onPress={() => {\n                active.indexOf(option) != -1\n                  ? setActive(active.filter((x) => x != option))\n                  : setActive([...active, option]);\n                console.log(active);\n              }}\n            >\n              {option}\n            </Button>\n          ))}\n        </HStack>\n      </View>\n    </SwipeablePanel>\n  );\n};\n\nexport default SlideUpDrawer;\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 20,\n    flex: 1,\n    alignItems: \"flex-start\",\n    justifyContent: \"center\",\n    backgroundColor: \"#FFF\",\n  },\n  title: {\n    fontSize: 24,\n    marginBottom: 10,\n    // fontWeight: \"bold\",\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: \"80%\",\n  },\n  greenText: {\n    color: \"#147460\",\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}