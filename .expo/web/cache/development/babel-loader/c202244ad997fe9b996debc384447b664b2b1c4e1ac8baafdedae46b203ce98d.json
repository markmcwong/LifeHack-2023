{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport * as React from \"react\";\nimport { Icon } from \"native-base\";\nimport { Text, View } from \"../components/Themed\";\nimport Achievement from \"../screens/achievement\";\nimport { ChatListScreen } from \"../screens/ChatListScreen\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport ProfileScreen from \"../screens/ProfileScreen\";\nimport TabOneScreen from \"../screens/TabOneScreen\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { useSelector } from \"react-redux\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar BottomTab = createBottomTabNavigator();\nexport default function BottomTabNavigator() {\n  var user = useSelector(function (state) {\n    return state.user;\n  });\n  return _jsxs(BottomTab.Navigator, {\n    initialRouteName: \"TabOne\",\n    tabBar: function tabBar(props) {\n      return _jsx(MyTabBar, _objectSpread({}, props));\n    },\n    tabBarOptions: {\n      activeTintColor: user.isYouth ? \"#ff9f00\" : \"#78C9A7\",\n      inactiveTintColor: \"#c2c2c2\",\n      safeAreaInsets: {\n        bottom: 10\n      },\n      labelStyle: {\n        display: \"none\"\n      }\n    },\n    children: [_jsx(BottomTab.Screen, {\n      name: \"TabOne\",\n      component: TabOneNavigator,\n      options: {\n        tabBarIcon: function tabBarIcon(_ref) {\n          var color = _ref.color;\n          return _jsx(TabBarIcon, {\n            name: \"home-outline\",\n            color: color\n          });\n        }\n      }\n    }), _jsx(BottomTab.Screen, {\n      name: \"TabTwo\",\n      component: TabTwoNavigator,\n      options: {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var color = _ref2.color;\n          return _jsx(TabBarIcon, {\n            name: \"chatbubbles-outline\",\n            color: color\n          });\n        }\n      }\n    }), user.isYouth && _jsx(BottomTab.Screen, {\n      name: \"TabThree\",\n      component: Achievement,\n      options: {\n        tabBarIcon: function tabBarIcon(_ref3) {\n          var color = _ref3.color;\n          return _jsx(TabBarIcon, {\n            name: \"trophy-outline\",\n            color: color\n          });\n        }\n      }\n    }), _jsx(BottomTab.Screen, {\n      name: \"TabFour\",\n      component: ProfileScreen,\n      options: {\n        tabBarIcon: function tabBarIcon(_ref4) {\n          var color = _ref4.color;\n          return _jsx(TabBarIcon, {\n            name: \"person-circle-outline\",\n            color: color\n          });\n        }\n      }\n    })]\n  });\n}\nfunction MyTabBar(_ref5) {\n  var state = _ref5.state,\n    descriptors = _ref5.descriptors,\n    navigation = _ref5.navigation;\n  var user = useSelector(function (state) {\n    return state.user;\n  });\n  return _jsx(View, {\n    style: {\n      flexDirection: \"row\",\n      backgroundColor: \"#ffffff\",\n      padding: 15,\n      borderRadius: 25,\n      marginHorizontal: 30,\n      overflow: \"hidden\",\n      position: \"absolute\",\n      bottom: 20\n    },\n    children: state.routes.map(function (route, index) {\n      var options = descriptors[route.key].options;\n      var label = options.tabBarLabel !== undefined ? options.tabBarLabel : options.title !== undefined ? options.title : route.name;\n      var isFocused = state.index === index;\n      var onPress = function onPress() {\n        var event = navigation.emit({\n          type: \"tabPress\",\n          target: route.key\n        });\n        if (!isFocused && !event.defaultPrevented) {\n          navigation.navigate(route.name);\n        }\n      };\n      var onLongPress = function onLongPress() {\n        navigation.emit({\n          type: \"tabLongPress\",\n          target: route.key\n        });\n      };\n      return _jsx(TouchableOpacity, {\n        accessibilityRole: \"button\",\n        accessibilityStates: isFocused ? [\"selected\"] : [],\n        accessibilityLabel: options.tabBarAccessibilityLabel,\n        testID: options.tabBarTestID,\n        onPress: onPress,\n        onLongPress: onLongPress,\n        style: {\n          flex: 1,\n          alignItems: \"center\"\n        },\n        children: _jsx(Icon, {\n          color: isFocused ? user.isYouth ? \"#ff9f00\" : \"#78C9A7\" : \"#c2c2c2\",\n          as: options.tabBarIcon\n        })\n      }, index);\n    })\n  });\n}\nfunction TabBarIcon(props) {\n  return _jsx(Ionicons, _objectSpread({\n    size: 30,\n    style: {\n      marginBottom: -3\n    }\n  }, props));\n}\nvar TabOneStack = createStackNavigator();\nfunction TabOneNavigator() {\n  var user = useSelector(function (state) {\n    return state.user;\n  });\n  return _jsx(TabOneStack.Navigator, {\n    screenOptions: {\n      headerTitle: function headerTitle() {\n        return _jsx(Text, {});\n      },\n      headerStyle: {\n        backgroundColor: user.isYouth ? \"#ff9f00\" : \"#78C9A7\",\n        height: 30,\n        shadowOffset: {\n          height: 0\n        }\n      }\n    },\n    children: _jsx(TabOneStack.Screen, {\n      name: \"TabOneScreen\",\n      component: TabOneScreen,\n      options: {\n        headerTitle: function headerTitle() {\n          return _jsx(Text, {});\n        }\n      }\n    })\n  });\n}\nvar TabTwoStack = createStackNavigator();\nfunction TabTwoNavigator() {\n  return _jsx(TabTwoStack.Navigator, {\n    initialRouteName: \"ChatList\",\n    children: _jsx(TabTwoStack.Screen, {\n      name: \"ChatList\",\n      component: ChatListScreen,\n      options: {\n        header: function header() {\n          return null;\n        },\n        headerTitle: function headerTitle() {\n          return _jsx(Text, {});\n        }\n      }\n    })\n  });\n}","map":{"version":3,"names":["React","Icon","Text","View","Achievement","ChatListScreen","Ionicons","ProfileScreen","TabOneScreen","TouchableOpacity","createBottomTabNavigator","createStackNavigator","useSelector","jsx","_jsx","jsxs","_jsxs","BottomTab","BottomTabNavigator","user","state","Navigator","initialRouteName","tabBar","props","MyTabBar","_objectSpread","tabBarOptions","activeTintColor","isYouth","inactiveTintColor","safeAreaInsets","bottom","labelStyle","display","children","Screen","name","component","TabOneNavigator","options","tabBarIcon","_ref","color","TabBarIcon","TabTwoNavigator","_ref2","_ref3","_ref4","_ref5","descriptors","navigation","style","flexDirection","backgroundColor","padding","borderRadius","marginHorizontal","overflow","position","routes","map","route","index","key","label","tabBarLabel","undefined","title","isFocused","onPress","event","emit","type","target","defaultPrevented","navigate","onLongPress","accessibilityRole","accessibilityStates","accessibilityLabel","tabBarAccessibilityLabel","testID","tabBarTestID","flex","alignItems","as","size","marginBottom","TabOneStack","screenOptions","headerTitle","headerStyle","height","shadowOffset","TabTwoStack","header"],"sources":["/Users/chengchuan/Coding/Projects/LifeHack-2023/navigation/BottomTabNavigator.tsx"],"sourcesContent":["/**\n * Learn more about createBottomTabNavigator:\n * https://reactnavigation.org/docs/bottom-tab-navigator\n */\n\nimport * as React from \"react\";\n\nimport { BottomTabParamList, TabOneParamList, TabTwoParamList } from \"../types\";\nimport { HStack, Icon, Image, VStack } from \"native-base\";\nimport { Text, View } from \"../components/Themed\";\n\nimport Achievement from \"../screens/achievement\";\nimport ChatBox from \"../screens/chatBox\";\nimport { ChatListScreen } from \"../screens/ChatListScreen\";\nimport Colors from \"../constants/Colors\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport PersonDetailScreen from \"../screens/PersonDetail\";\nimport ProfileScreen from \"../screens/ProfileScreen\";\nimport TabOneScreen from \"../screens/TabOneScreen\";\nimport TabTwoScreen from \"../screens/TabTwoScreen\";\nimport { TouchableOpacity } from \"react-native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport selectFamiliarLang from \"../screens/selectFamiliarLang\";\nimport selectInterests from \"../screens/selectInterests\";\nimport selectStartingLanguage from \"../screens/selectStartingLang\";\nimport selectYouthElderly from \"../screens/selectYouthElderly\";\nimport selfIntroduction from \"../screens/selfIntroduction\";\nimport { useSelector } from \"react-redux\";\n\nconst BottomTab = createBottomTabNavigator<BottomTabParamList>();\n\nexport default function BottomTabNavigator() {\n  const user = useSelector((state: any) => state.user);\n  return (\n    <BottomTab.Navigator\n      initialRouteName=\"TabOne\"\n      tabBar={(props) => <MyTabBar {...props} />}\n      tabBarOptions={{\n        activeTintColor: user.isYouth ? \"#ff9f00\" : \"#78C9A7\",\n        // \"#EFB556\",\n        inactiveTintColor: \"#c2c2c2\",\n        safeAreaInsets: { bottom: 10 },\n\n        labelStyle: {\n          display: \"none\",\n        },\n      }}\n    >\n      <BottomTab.Screen\n        name=\"TabOne\"\n        component={TabOneNavigator}\n        options={{\n          // style: { backgroundColor: \"#ffffff\" },\n          // tabBarVisible: false,\n          tabBarIcon: ({ color }) => (\n            <TabBarIcon name=\"home-outline\" color={color} />\n          ),\n        }}\n      />\n      <BottomTab.Screen\n        name=\"TabTwo\"\n        component={TabTwoNavigator}\n        options={{\n          tabBarIcon: ({ color }) => (\n            <TabBarIcon name=\"chatbubbles-outline\" color={color} />\n          ),\n        }}\n      />\n      {user.isYouth && (\n        <BottomTab.Screen\n          name=\"TabThree\"\n          component={Achievement}\n          options={{\n            tabBarIcon: ({ color }) => (\n              <TabBarIcon name=\"trophy-outline\" color={color} />\n            ),\n          }}\n        />\n      )}\n      <BottomTab.Screen\n        name=\"TabFour\"\n        component={ProfileScreen}\n        options={{\n          tabBarIcon: ({ color }) => (\n            <TabBarIcon name=\"person-circle-outline\" color={color} />\n          ),\n        }}\n      />\n    </BottomTab.Navigator>\n  );\n}\n\nfunction MyTabBar({ state, descriptors, navigation }) {\n  const user = useSelector((state: any) => state.user);\n  return (\n    // state.index == 1 ? (\n    //   <></>\n    // ) :\n    <View\n      style={{\n        flexDirection: \"row\",\n        backgroundColor: \"#ffffff\",\n        // height: 50,\n\n        padding: 15,\n        borderRadius: 25,\n        // justifyContent: \"center\",\n        // alignItems: \"center\",\n        marginHorizontal: 30,\n        overflow: \"hidden\",\n        position: \"absolute\",\n        bottom: 20,\n      }}\n    >\n      {state.routes.map((route, index) => {\n        const { options } = descriptors[route.key];\n        const label =\n          options.tabBarLabel !== undefined\n            ? options.tabBarLabel\n            : options.title !== undefined\n            ? options.title\n            : route.name;\n\n        const isFocused = state.index === index;\n\n        const onPress = () => {\n          const event = navigation.emit({\n            type: \"tabPress\",\n            target: route.key,\n          });\n\n          if (!isFocused && !event.defaultPrevented) {\n            navigation.navigate(route.name);\n          }\n        };\n\n        const onLongPress = () => {\n          navigation.emit({\n            type: \"tabLongPress\",\n            target: route.key,\n          });\n        };\n\n        return (\n          <TouchableOpacity\n            accessibilityRole=\"button\"\n            accessibilityStates={isFocused ? [\"selected\"] : []}\n            accessibilityLabel={options.tabBarAccessibilityLabel}\n            testID={options.tabBarTestID}\n            onPress={onPress}\n            onLongPress={onLongPress}\n            key={index}\n            style={{ flex: 1, alignItems: \"center\" }}\n          >\n            <Icon\n              color={\n                isFocused ? (user.isYouth ? \"#ff9f00\" : \"#78C9A7\") : \"#c2c2c2\"\n              }\n              as={options.tabBarIcon}\n            ></Icon>\n          </TouchableOpacity>\n        );\n      })}\n    </View>\n  );\n}\n\n// You can explore the built-in icon families and icons on the web at:\n// https://icons.expo.fyi/\nfunction TabBarIcon(props: {\n  name: React.ComponentProps<typeof Ionicons>[\"name\"];\n  color: string;\n}) {\n  return <Ionicons size={30} style={{ marginBottom: -3 }} {...props} />;\n}\n\n// Each tab has its own navigation stack, you can read more about this pattern here:\n// https://reactnavigation.org/docs/tab-based-navigation#a-stack-navigator-for-each-tab\nconst TabOneStack = createStackNavigator<TabOneParamList>();\n\nfunction TabOneNavigator() {\n  const user = useSelector((state: any) => state.user);\n  return (\n    <TabOneStack.Navigator\n      screenOptions={{\n        headerTitle: () => <Text></Text>,\n        headerStyle: {\n          backgroundColor: user.isYouth ? \"#ff9f00\" : \"#78C9A7\",\n          height: 30,\n          shadowOffset: { height: 0 },\n        },\n      }}\n    >\n      <TabOneStack.Screen\n        name=\"TabOneScreen\"\n        component={TabOneScreen}\n        options={{\n          headerTitle: () => <Text></Text>,\n        }}\n      />\n    </TabOneStack.Navigator>\n  );\n}\n\nconst TabTwoStack = createStackNavigator<TabTwoParamList>();\n\nfunction TabTwoNavigator() {\n  return (\n    <TabTwoStack.Navigator initialRouteName=\"ChatList\">\n      <TabTwoStack.Screen\n        name=\"ChatList\"\n        component={ChatListScreen}\n        options={{\n          header: () => null,\n          headerTitle: () => <Text></Text>,\n        }}\n      />\n    </TabTwoStack.Navigator>\n  );\n}\n"],"mappings":";;;AAKA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAG9B,SAAiBC,IAAI,QAAuB,aAAa;AACzD,SAASC,IAAI,EAAEC,IAAI;AAEnB,OAAOC,WAAW;AAElB,SAASC,cAAc;AAEvB,SAASC,QAAQ,QAAQ,oBAAoB;AAE7C,OAAOC,aAAa;AACpB,OAAOC,YAAY;AAAgC,OAAAC,gBAAA;AAGnD,SAASC,wBAAwB,QAAQ,+BAA+B;AACxE,SAASC,oBAAoB,QAAQ,yBAAyB;AAM9D,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE1C,IAAMC,SAAS,GAAGP,wBAAwB,CAAqB,CAAC;AAEhE,eAAe,SAASQ,kBAAkBA,CAAA,EAAG;EAC3C,IAAMC,IAAI,GAAGP,WAAW,CAAC,UAACQ,KAAU;IAAA,OAAKA,KAAK,CAACD,IAAI;EAAA,EAAC;EACpD,OACEH,KAAA,CAACC,SAAS,CAACI,SAAS;IAClBC,gBAAgB,EAAC,QAAQ;IACzBC,MAAM,EAAE,SAAAA,OAACC,KAAK;MAAA,OAAKV,IAAA,CAACW,QAAQ,EAAAC,aAAA,KAAKF,KAAK,CAAG,CAAC;IAAA,CAAC;IAC3CG,aAAa,EAAE;MACbC,eAAe,EAAET,IAAI,CAACU,OAAO,GAAG,SAAS,GAAG,SAAS;MAErDC,iBAAiB,EAAE,SAAS;MAC5BC,cAAc,EAAE;QAAEC,MAAM,EAAE;MAAG,CAAC;MAE9BC,UAAU,EAAE;QACVC,OAAO,EAAE;MACX;IACF,CAAE;IAAAC,QAAA,GAEFrB,IAAA,CAACG,SAAS,CAACmB,MAAM;MACfC,IAAI,EAAC,QAAQ;MACbC,SAAS,EAAEC,eAAgB;MAC3BC,OAAO,EAAE;QAGPC,UAAU,EAAE,SAAAA,WAAAC,IAAA;UAAA,IAAGC,KAAK,GAAAD,IAAA,CAALC,KAAK;UAAA,OAClB7B,IAAA,CAAC8B,UAAU;YAACP,IAAI,EAAC,cAAc;YAACM,KAAK,EAAEA;UAAM,CAAE,CAAC;QAAA;MAEpD;IAAE,CACH,CAAC,EACF7B,IAAA,CAACG,SAAS,CAACmB,MAAM;MACfC,IAAI,EAAC,QAAQ;MACbC,SAAS,EAAEO,eAAgB;MAC3BL,OAAO,EAAE;QACPC,UAAU,EAAE,SAAAA,WAAAK,KAAA;UAAA,IAAGH,KAAK,GAAAG,KAAA,CAALH,KAAK;UAAA,OAClB7B,IAAA,CAAC8B,UAAU;YAACP,IAAI,EAAC,qBAAqB;YAACM,KAAK,EAAEA;UAAM,CAAE,CAAC;QAAA;MAE3D;IAAE,CACH,CAAC,EACDxB,IAAI,CAACU,OAAO,IACXf,IAAA,CAACG,SAAS,CAACmB,MAAM;MACfC,IAAI,EAAC,UAAU;MACfC,SAAS,EAAElC,WAAY;MACvBoC,OAAO,EAAE;QACPC,UAAU,EAAE,SAAAA,WAAAM,KAAA;UAAA,IAAGJ,KAAK,GAAAI,KAAA,CAALJ,KAAK;UAAA,OAClB7B,IAAA,CAAC8B,UAAU;YAACP,IAAI,EAAC,gBAAgB;YAACM,KAAK,EAAEA;UAAM,CAAE,CAAC;QAAA;MAEtD;IAAE,CACH,CACF,EACD7B,IAAA,CAACG,SAAS,CAACmB,MAAM;MACfC,IAAI,EAAC,SAAS;MACdC,SAAS,EAAE/B,aAAc;MACzBiC,OAAO,EAAE;QACPC,UAAU,EAAE,SAAAA,WAAAO,KAAA;UAAA,IAAGL,KAAK,GAAAK,KAAA,CAALL,KAAK;UAAA,OAClB7B,IAAA,CAAC8B,UAAU;YAACP,IAAI,EAAC,uBAAuB;YAACM,KAAK,EAAEA;UAAM,CAAE,CAAC;QAAA;MAE7D;IAAE,CACH,CAAC;EAAA,CACiB,CAAC;AAE1B;AAEA,SAASlB,QAAQA,CAAAwB,KAAA,EAAqC;EAAA,IAAlC7B,KAAK,GAAA6B,KAAA,CAAL7B,KAAK;IAAE8B,WAAW,GAAAD,KAAA,CAAXC,WAAW;IAAEC,UAAU,GAAAF,KAAA,CAAVE,UAAU;EAChD,IAAMhC,IAAI,GAAGP,WAAW,CAAC,UAACQ,KAAU;IAAA,OAAKA,KAAK,CAACD,IAAI;EAAA,EAAC;EACpD,OAIEL,IAAA,CAACX,IAAI;IACHiD,KAAK,EAAE;MACLC,aAAa,EAAE,KAAK;MACpBC,eAAe,EAAE,SAAS;MAG1BC,OAAO,EAAE,EAAE;MACXC,YAAY,EAAE,EAAE;MAGhBC,gBAAgB,EAAE,EAAE;MACpBC,QAAQ,EAAE,QAAQ;MAClBC,QAAQ,EAAE,UAAU;MACpB3B,MAAM,EAAE;IACV,CAAE;IAAAG,QAAA,EAEDf,KAAK,CAACwC,MAAM,CAACC,GAAG,CAAC,UAACC,KAAK,EAAEC,KAAK,EAAK;MAClC,IAAQvB,OAAO,GAAKU,WAAW,CAACY,KAAK,CAACE,GAAG,CAAC,CAAlCxB,OAAO;MACf,IAAMyB,KAAK,GACTzB,OAAO,CAAC0B,WAAW,KAAKC,SAAS,GAC7B3B,OAAO,CAAC0B,WAAW,GACnB1B,OAAO,CAAC4B,KAAK,KAAKD,SAAS,GAC3B3B,OAAO,CAAC4B,KAAK,GACbN,KAAK,CAACzB,IAAI;MAEhB,IAAMgC,SAAS,GAAGjD,KAAK,CAAC2C,KAAK,KAAKA,KAAK;MAEvC,IAAMO,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAAS;QACpB,IAAMC,KAAK,GAAGpB,UAAU,CAACqB,IAAI,CAAC;UAC5BC,IAAI,EAAE,UAAU;UAChBC,MAAM,EAAEZ,KAAK,CAACE;QAChB,CAAC,CAAC;QAEF,IAAI,CAACK,SAAS,IAAI,CAACE,KAAK,CAACI,gBAAgB,EAAE;UACzCxB,UAAU,CAACyB,QAAQ,CAACd,KAAK,CAACzB,IAAI,CAAC;QACjC;MACF,CAAC;MAED,IAAMwC,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;QACxB1B,UAAU,CAACqB,IAAI,CAAC;UACdC,IAAI,EAAE,cAAc;UACpBC,MAAM,EAAEZ,KAAK,CAACE;QAChB,CAAC,CAAC;MACJ,CAAC;MAED,OACElD,IAAA,CAACL,gBAAgB;QACfqE,iBAAiB,EAAC,QAAQ;QAC1BC,mBAAmB,EAAEV,SAAS,GAAG,CAAC,UAAU,CAAC,GAAG,EAAG;QACnDW,kBAAkB,EAAExC,OAAO,CAACyC,wBAAyB;QACrDC,MAAM,EAAE1C,OAAO,CAAC2C,YAAa;QAC7Bb,OAAO,EAAEA,OAAQ;QACjBO,WAAW,EAAEA,WAAY;QAEzBzB,KAAK,EAAE;UAAEgC,IAAI,EAAE,CAAC;UAAEC,UAAU,EAAE;QAAS,CAAE;QAAAlD,QAAA,EAEzCrB,IAAA,CAACb,IAAI;UACH0C,KAAK,EACH0B,SAAS,GAAIlD,IAAI,CAACU,OAAO,GAAG,SAAS,GAAG,SAAS,GAAI,SACtD;UACDyD,EAAE,EAAE9C,OAAO,CAACC;QAAW,CAClB;MAAC,GARHsB,KASW,CAAC;IAEvB,CAAC;EAAC,CACE,CAAC;AAEX;AAIA,SAASnB,UAAUA,CAACpB,KAGnB,EAAE;EACD,OAAOV,IAAA,CAACR,QAAQ,EAAAoB,aAAA;IAAC6D,IAAI,EAAE,EAAG;IAACnC,KAAK,EAAE;MAAEoC,YAAY,EAAE,CAAC;IAAE;EAAE,GAAKhE,KAAK,CAAG,CAAC;AACvE;AAIA,IAAMiE,WAAW,GAAG9E,oBAAoB,CAAkB,CAAC;AAE3D,SAAS4B,eAAeA,CAAA,EAAG;EACzB,IAAMpB,IAAI,GAAGP,WAAW,CAAC,UAACQ,KAAU;IAAA,OAAKA,KAAK,CAACD,IAAI;EAAA,EAAC;EACpD,OACEL,IAAA,CAAC2E,WAAW,CAACpE,SAAS;IACpBqE,aAAa,EAAE;MACbC,WAAW,EAAE,SAAAA,YAAA;QAAA,OAAM7E,IAAA,CAACZ,IAAI,IAAO,CAAC;MAAA;MAChC0F,WAAW,EAAE;QACXtC,eAAe,EAAEnC,IAAI,CAACU,OAAO,GAAG,SAAS,GAAG,SAAS;QACrDgE,MAAM,EAAE,EAAE;QACVC,YAAY,EAAE;UAAED,MAAM,EAAE;QAAE;MAC5B;IACF,CAAE;IAAA1D,QAAA,EAEFrB,IAAA,CAAC2E,WAAW,CAACrD,MAAM;MACjBC,IAAI,EAAC,cAAc;MACnBC,SAAS,EAAE9B,YAAa;MACxBgC,OAAO,EAAE;QACPmD,WAAW,EAAE,SAAAA,YAAA;UAAA,OAAM7E,IAAA,CAACZ,IAAI,IAAO,CAAC;QAAA;MAClC;IAAE,CACH;EAAC,CACmB,CAAC;AAE5B;AAEA,IAAM6F,WAAW,GAAGpF,oBAAoB,CAAkB,CAAC;AAE3D,SAASkC,eAAeA,CAAA,EAAG;EACzB,OACE/B,IAAA,CAACiF,WAAW,CAAC1E,SAAS;IAACC,gBAAgB,EAAC,UAAU;IAAAa,QAAA,EAChDrB,IAAA,CAACiF,WAAW,CAAC3D,MAAM;MACjBC,IAAI,EAAC,UAAU;MACfC,SAAS,EAAEjC,cAAe;MAC1BmC,OAAO,EAAE;QACPwD,MAAM,EAAE,SAAAA,OAAA;UAAA,OAAM,IAAI;QAAA;QAClBL,WAAW,EAAE,SAAAA,YAAA;UAAA,OAAM7E,IAAA,CAACZ,IAAI,IAAO,CAAC;QAAA;MAClC;IAAE,CACH;EAAC,CACmB,CAAC;AAE5B"},"metadata":{},"sourceType":"module","externalDependencies":[]}